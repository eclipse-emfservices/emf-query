<project name="Customized testing instructions" default="noDefault">

	<property name="transientPropertiesFile" value="${buildDirectory}/transientProperties.txt" />
	<available file="${transientPropertiesFile}" type="file" property="transientPropertiesIsAvailable" />

	<target name="loadTransientProperties" if="transientPropertiesIsAvailable">
		<property file="${transientPropertiesFile}" />
	</target>

	<target name="customSetup">
		<antcall target="loadTransientProperties"/>
	
		<antcall target="installVM"/>

		<property name="shell" value="relengbuildgtk.sh"/>
	
		<!--copy the script which invokes the tests -->
		<copy file="${tester}/${shell}" todir="${executionDir}"/>
		<chmod file="${executionDir}/${shell}" perm="ugo+rx"/>		

		<!--copy the testing.property files  -->
		<copy file="${tester}/testing.properties" todir="${executionDir}"/>

		<!--copy the runtimes to install for testing, excluding the JUnit plug-in tests-->
		<!-- if there's already an existing eclipse zip by the same name in the dest folder, don't download it again! -->
		<available file="${downloadsDir}/${eclipseFile}" property="eclipseZipExists"/>
		<antcall target="downloadEclipse" />
		
		<copy file="${downloadsDir}/${eclipseFile}" todir="${executionDir}"/>

		<available file="${downloadsDir}/${emfFile}" property="emfZipExists"/>
		<antcall target="downloadEMF" />

		<copy file="${downloadsDir}/${emfFile}" todir="${executionDir}"/>

		<!-- at this point, we exit from this script and back into the parent script (presumably in pde or eclipse.releng?) -->
		<echo message="Running relengbuildgtk.sh ..."/>
	</target>
	
	<target name="downloadEclipse" unless="eclipseZipExists">
		<get src="${eclipseURL}" dest="${downloadsDir}/${eclipseFile}" usetimestamp="true"/>
		<touch file="${downloadsDir}/${eclipseFile}"/>
	</target>

	<target name="downloadEMF" unless="emfZipExists">
		<get src="${emfURL}" dest="${downloadsDir}/${emfFile}" usetimestamp="true"/>
		<touch file="${downloadsDir}/${emfFile}"/>
	</target>
	
	<target name="installVM" if="doVmInstall">
		<!-- note: only gzip, zip and bzip2 are supported; compress (.tar.Z) is not -->
		<condition property="isVmFileZip"><contains string="${vmFile}" substring=".zip" /></condition>
		<condition property="isVmFileTarGz"><contains string="${vmFile}" substring=".tar.gz" /></condition>
		
		<antcall target="vmFileUnZip" />
		<antcall target="vmFileUnTarGz" />
	</target>

	<target name="vmFileUnTarGz" if="isVmFileTarGz">
		<untar compression="gzip" src="${downloadsDir}/${vmFileName}" dest="${testDir}/" overwrite="true"/>
	</target>

	<target name="vmFileUnZip" if="isVmFileZip">
		<unzip src="${downloadsDir}/${vmFileName}" dest="${testDir}/" overwrite="true"/>
	</target>

	<target name="noDefault"/>
</project>
